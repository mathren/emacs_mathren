(package-initialize)

(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(LaTeX-command "latex -synctex=1")
 '(TeX-view-predicate-list '((nil nil)))
 '(TeX-view-program-list '(("Okular" ("okular --unique %o#src:%n%b") nil)))
 '(TeX-view-program-selection
   '((output-pdf "Okular")
     (output-pdf "dvips and gv")
     (output-dvi "Evince")
     (output-html "xdg-open")))
 '(ansi-color-names-vector
   ["#3F3F3F" "#CC9393" "#7F9F7F" "#F0DFAF" "#8CD0D3" "#DC8CC3" "#93E0E3" "#DCDCCC"])
 '(arxiv-author-list-maximum 5)
 '(arxiv-default-bibliography
   "/home/math/Documents/Research/Biblio_papers/bibtex/master_bibtex.bib")
 '(arxiv-default-category "astro-ph")
 '(arxiv-default-download-folder "tmp/")
 '(arxiv-entries-per-fetch 120)
 '(auth-source-save-behavior nil)
 '(company-quickhelp-color-background "#4F4F4F")
 '(company-quickhelp-color-foreground "#DCDCCC")
 '(custom-safe-themes
   '("2ebf3d81b7555f8c8cfc42017b00dc47f1fbe80ffce53439c9401da3989fedcd" default))
 '(ein:output-area-inlined-images t t)
 '(elfeed-goodies/entry-pane-position 'bottom)
 '(elfeed-goodies/entry-pane-size 0.4)
 '(elfeed-goodies/powerline-default-separator 'slant)
 '(elfeed-search-date-format '("%d.%m.%y" 10 :left))
 '(elfeed-search-remain-on-entry t)
 '(elfeed-show-entry-switch 'pop-to-buffer)
 '(elpy-rpc-python-command "/usr/bin/python3")
 '(elpy-rpc-virtualenv-path 'current)
 '(fci-rule-color "#383838")
 '(global-display-line-numbers-mode t)
 '(inhibit-startup-screen t)
 '(nrepl-message-colors
   '("#CC9393" "#DFAF8F" "#F0DFAF" "#7F9F7F" "#BFEBBF" "#93E0E3" "#94BFF3" "#DC8CC3"))
 '(org-agenda-files
   '("/home/math/Documents/Research/Todos.org" "/home/math/Documents/Teaching/AstrocomNY/XRB_GW_connection/Nachi_summer2021.org" "/home/math/Documents/Research/Projects/weak_G_stars/private_notes.org" "/home/math/Documents/Research/Projects/weak_G_stars/README.org" "/home/math/Documents/Mathieu/personale/US_bureaucracy/housing_docs/Housing_search.org" "/home/math/Documents/Research/Projects/PP/FLASH/FLASH_notes.org"))
 '(org-download-screenshot-method "xclip -selection clipboard -t image/png -o > %s")
 '(org-emphasis-alist
   '(("*" bold)
     ("/" italic)
     ("_" underline)
     ("=" org-verbatim verbatim)
     ("~" org-code verbatim)
     ("+"
      (:strike-through t))
     ("!"
      (:overline t))))
 '(org-file-apps
   '((auto-mode . emacs)
     ("\\.mm\\'" . default)
     (".html" . "firefox %s")
     (".pdf" . "okular %s")))
 '(package-selected-packages
   '(citar indent-bars highlight-indent-guides snake-mode all-the-icons gh-md fzf elpy all-the-icons-nerd-fonts nerd-icons-ivy-rich nerd-icons-ibuffer nerd-icons-completion nerd-icons-dired which-key-posframe sudo-edit org-caldav snakemake-mode simple-httpd htmlize ws-butler all-the-icons-completion fontawesome f super-save ox-publish magit-lfs multiple-cursors arxiv-mode elfeed-goodies elfeed-org mu4e ivy-fuz company-prescient company-auctex company-bibtex company-fuzzy eglot ripgrep ein eproject markdown-mode editorconfig ac-html deadgrep pdf-tools helm-org blacken org-alert elfeed python-black yaml-mode jedi eshell-prompt-extras math-preview ivy-pass pass org-download helpful doom-modeline doom-themes diredful dired-single diredfl no-littering company-box ivy-prescient counsel major-mode-icons ivy org-bullets rainbow-delimiters which-key dired-icon magit flyspell-popup use-package tramp treemacs-magit org jedi-core flycheck dashboard auctex))
 '(pdf-view-midnight-colors '("#DCDCCC" . "#383838"))
 '(safe-local-variable-values '((TeX-master . main.tex)))
 '(send-mail-function 'mailclient-send-it)
 '(show-paren-mode t)
 '(vc-annotate-background "#2B2B2B")
 '(vc-annotate-color-map
   '((20 . "#BC8383")
     (40 . "#CC9393")
     (60 . "#DFAF8F")
     (80 . "#D0BF8F")
     (100 . "#E0CF9F")
     (120 . "#F0DFAF")
     (140 . "#5F7F5F")
     (160 . "#7F9F7F")
     (180 . "#8FB28F")
     (200 . "#9FC59F")
     (220 . "#AFD8AF")
     (240 . "#BFEBBF")
     (260 . "#93E0E3")
     (280 . "#6CA0A3")
     (300 . "#7CB8BB")
     (320 . "#8CD0D3")
     (340 . "#94BFF3")
     (360 . "#DC8CC3")))
 '(vc-annotate-very-old-color "#DC8CC3")
 '(warning-suppress-log-types '((comp)))
 '(warning-suppress-types '((comp))))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(arxiv-abstract-author-face ((t (:foreground "dark gray"))))
 '(arxiv-abstract-face ((t (:foreground "white"))))
 '(arxiv-abstract-title-face ((t (:inherit font-lock-keyword-face :foreground "gold" :underline t :weight bold :height 1.5))))
 '(arxiv-author-face ((t (:foreground "dark gray"))))
 '(arxiv-date-face ((t (:foreground "cyan"))))
 '(arxiv-subfield-face ((t (:foreground "salmon"))))
 '(arxiv-title-face ((t (:foreground "gold" :weight bold :height 1.2))))
 '(cursor ((t (:background "gold" :box (:line-width 3 :color "red" :style released-button)))))
 '(doom-modeline-info ((t (:inherit (success bold) :foreground "RoyalBlue"))))
 '(doom-modeline-project-dir ((t (:foreground "dark violet"))))
 '(elfeed-search-date-face ((t (:foreground "cyan"))))
 '(elfeed-search-unread-title-face ((t (:foreground "gold" :weight normal))))
 '(eshell-prompt ((t (:foreground "chartreuse" :weight bold))))
 '(font-latex-sectioning-0-face ((t (:inherit font-latex-sectioning-1-face :foreground "orange" :height 1.1))))
 '(font-latex-sectioning-1-face ((t (:inherit font-latex-sectioning-2-face :foreground "orange" :height 1.1))))
 '(font-latex-sectioning-2-face ((t (:inherit font-latex-sectioning-3-face :foreground "orange" :height 1.1))))
 '(font-latex-sectioning-3-face ((t (:inherit font-latex-sectioning-4-face :foreground "orange" :height 1.1))))
 '(font-latex-sectioning-4-face ((t (:inherit font-latex-sectioning-5-face :foreground "orange" :height 1.1))))
 '(font-latex-sectioning-5-face ((t (:inherit variable-pitch :foreground "orange" :weight bold))))
 '(ivy-cursor ((t (:background "gray72" :foreground "black"))))
 '(mode-line ((t (:background "gold" :foreground "black" :overline "red"))))
 '(mode-line-inactive ((t (:background "#444444" :foreground "#857b6f" :overline "red"))))
 '(org-level-1 ((t (:inherit outline-1 :box 2 :underline nil))))
 '(org-level-2 ((t (:box (:line-width (2 . 2) :color "deep sky blue") :foreground "deep sky blue" :extend nil))))
 '(org-level-3 ((t (:foreground "orange red"))))
 '(org-level-4 ((t (:foreground "deep sky blue"))))
 '(term-color-black ((t (:foreground "#3F3F3F" :background "#2B2B2B"))))
 '(term-color-blue ((t (:foreground "#7CB8BB" :background "#4C7073"))))
 '(term-color-cyan ((t (:foreground "#93E0E3" :background "#8CD0D3"))))
 '(term-color-green ((t (:foreground "#7F9F7F" :background "#9FC59F"))))
 '(term-color-magenta ((t (:foreground "#DC8CC3" :background "#CC9393"))))
 '(term-color-red ((t (:foreground "#AC7373" :background "#8C5353"))))
 '(term-color-white ((t (:foreground "#DCDCCC" :background "#656555"))))
 '(term-color-yellow ((t (:foreground "#DFAF8F" :background "#9FC59F"))))
 '(term-default-bg-color ((t (:inherit term-color-black))))
 '(term-default-fg-color ((t (:inherit term-color-white))))
 '(widget-button ((t (:foreground "#0084C8" :weight bold)))))
